---
AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS CloudFormation Sample Template : Sample template
  showing how to create one public and one private VPC. 
  NOTE: You will be billed for the AWS resources used if  you create a stack from this template."
Parameters:
  VpcCidr:
    Description: IP Address range for the Public VPC
    Type: String
    Default: 10.42.19.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  Environment:
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - prod
  AvailabilityZoneA:
    Type: 'AWS::EC2::AvailabilityZone::Name'
  AvailabilityZoneB:
    Type: 'AWS::EC2::AvailabilityZone::Name'
  PublicSubnetCidr:
    Description: IP Address range for the public subnet A
    Type: String
    Default:  10.42.19.0/26
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  PrivateSubnetCidr:
    Description: IP Address range for the Private subnet B
    Type: String
    Default:  10.42.19.64/26
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  KeyName:
    Description: "Name of an existing EC2 key pair for SSH access to the EC2 instance."
    Type: "AWS::EC2::KeyPair::KeyName"
  TimeZone:
    Description: "Choose your timezone"
    Type: "String"
    Default: "EST"
    AllowedValues:
    - "EST"
    - "CST"
    - "MST"
    - "PST"
  InstanceType:
    Description: " EC2 instance type."
    Type: "String"
    Default: "m4.2xlarge"
    # Default: "m5.2xlarge"
    AllowedValues:
    - "t2.small"
    - "t2.micro"
    - "m4.xlarge"
    - "m4.2xlarge"
    - "m5.xlarge"
    - "m5.2xlarge"
    ConstraintDescription: must be a valid EC2 instance type. 
  SSHLocation:
    Description: Lockdown SSH access to the Host
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.  
  VolumeSize:
    Description: The size of the EBS volume to attach
    Type: Number
    Default: '500'  
  WindowsAMI:
    Description: "Webserver Instance AMI"
    Type: "String"
    Default: "Microsoft-Windows-Server-2016-Base"
    AllowedValues:
    - "Microsoft-Windows-Server-2016-Base"
  FirebirdAMI:
    Description: "Firebird Instance AMI"
    Type: "String"
    Default: "Secured-Firebird-on-Windows-2012-R2"
    AllowedValues:
    - "Secured-Firebird-on-Windows-2012-R2"  
Mappings:
  AMIType:
    Microsoft-Windows-Server-2016-Base:
      HVM64: "ami-05f5c28bb6992ab4b"
    Secured-Firebird-on-Windows-2012-R2:
      HVM64: "ami-0ee38f81d5c86f3e2"
  # AMIType:
    # Microsoft-Windows-Server-2016-Base:
      # HVM64: "ami-05b83598992924b63"
    # Secured-Firebird-on-Windows-2012-R2:
      # HVM64: "ami-02dd85434c740b99d"  
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags:
      - Key: Name
        Value: parsons-vpc
  WebserverInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: webserver internet gateway 
  WebserverAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref WebserverInternetGateway        
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      Tags:
      - Key: Name
        Value: public-subnet
  WebServerElasticIP:
    Type: AWS::EC2::EIP
  WebserverElasticIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP:  !Ref WebServerElasticIP
      InstanceId: !Ref WebServerEC2Instance  
  WebserverSecurityGroup:
     Type: AWS::EC2::SecurityGroup
     Properties:
      GroupName: webserver-security group
      GroupDescription: Enable HTTP access via user defined port
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: !Ref SSHLocation
        FromPort: 80
        IpProtocol: -1
        ToPort: 80       
  WebServerEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneA
      InstanceType: !Ref InstanceType
      SecurityGroupIds: 
       - !Ref WebserverSecurityGroup
      SubnetId: !Ref PublicSubnet      
      KeyName:
        Ref: "KeyName"
      ImageId:
        Fn::FindInMap:
        - "AMIType"
        - Ref: "WindowsAMI"
        - "HVM64"
      BlockDeviceMappings:
       - DeviceName: /dev/sda1
         Ebs:
          VolumeType: gp2
          VolumeSize: !Ref VolumeSize
          DeleteOnTermination: True
       - DeviceName: xvdd
         Ebs:
          VolumeType: gp2
          VolumeSize: !Ref VolumeSize
          # DeleteOnTermination: True
      Tags:
      - Key: Name
        Value: Webserver Instance
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      CidrBlock: !Ref PrivateSubnetCidr
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value:  private-subnet      
  FirebirdEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      AvailabilityZone: !Ref AvailabilityZoneB
      InstanceType: !Ref InstanceType
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds: 
      - !Ref FirebirdSecurityGroup
      KeyName:
        Ref: "KeyName"
      ImageId:
        Fn::FindInMap:
        - "AMIType"
        - Ref: "FirebirdAMI"
        - "HVM64"
      BlockDeviceMappings:
       - DeviceName: /dev/sda1
         Ebs:
          VolumeType: gp2
          VolumeSize: !Ref VolumeSize
          DeleteOnTermination: True 
       - DeviceName: xvdd
         Ebs:
          VolumeType: gp2
          VolumeSize: !Ref VolumeSize
          # DeleteOnTermination: True           
      Tags:
      - Key: Name
        Value: Firebird Instance  
  FirebirdSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: firebird-security group 
      GroupDescription: Enable RDP, SSH and HTTPS access via user defined port
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - CidrIp: !Ref SSHLocation
        FromPort: 3389
        IpProtocol: tcp
        ToPort: 3389
      - CidrIp: !Ref SSHLocation
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80 
      - CidrIp: !Ref SSHLocation
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443          
Outputs:
  PublicVPCId:
    Description: ID of the newly created VPC
    Value: !Ref VpcCidr
  PublicSubnet:
    Description: ID of the  newly created Public Subnet
    Value: !Ref PublicSubnet
  PrivateSubnet:
    Description: ID of the  newly created Private Subnet
    Value: !Ref PrivateSubnet
  WebServerEC2Instance:
    Description: ID of the  newly created Web Server EC2 instance
    Value: !Ref WebServerEC2Instance
  FirebirdEC2Instance:
    Description: ID of the  newly created Web Server EC2 instance
    Value: !Ref FirebirdEC2Instance
     
Rules: {}